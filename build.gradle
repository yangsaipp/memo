buildscript {
	repositories {
		maven{url "http://maven.aliyun.com/nexus/content/groups/public"}
	}
}

plugins {
	id 'org.springframework.boot' version '1.5.1.RELEASE'
}

apply plugin: 'java'
//apply plugin: 'war'
apply plugin: 'maven-publish'	// 发布Jar包插件
apply plugin: 'project-report'

// 配置springBoot插件
springBoot {
    // 指定SpringBoot启动类
	// mainClass = 'com.comtop.DartApplication'
}

repositories {
//    jcenter()
//	mavenLocal()
	maven{url "http://maven.aliyun.com/nexus/content/groups/public"}
}

dependencies {
	compile 'org.apache.commons:commons-lang3:3.6'
	compile('org.springframework.boot:spring-boot-starter:1.5.1.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-data-jpa:1.5.1.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-actuator:1.5.1.RELEASE')
	compile("org.springframework.boot:spring-boot-starter-web:1.5.1.RELEASE")
//	runtime("org.xerial:sqlite-jdbc:3.20.0")
	runtime group: 'mysql', name: 'mysql-connector-java', version: '5.1.45'
	
	runtime('org.springframework.boot:spring-boot-devtools:1.5.1.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE')
	
}

ext {
	artifactId = project.name
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	baseName project.artifactId
	classifier "sources"
}

group = 'org.yancey'
version = '1.0'
// 运行publish命令发布到jar到指定中央仓库，运行publishToMavenLocal命令发布到本地maven仓库
publishing {
	publications {
		pb(MavenPublication) { // 运行publishToMavenLocal命令
			artifactId project.artifactId
			from components.java
			artifact sourceJar
			pom.withXml {
				def root = asNode()
			}
		}
	}
}